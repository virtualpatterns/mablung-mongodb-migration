{"version":3,"sources":["../../../source/test/library/migration.test.js"],"names":["Test","Database","Migration","test","url","name","migration","getMigration","is","length","isInstalled","installMigration","uninstallMigration","database","open","explanation","explainIndexMigration","winningPlan","queryPlanner","stage","inputStage","indexName","close"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { Database } from '../../index.js'\nimport { Migration } from './migration.js'\n\nTest('Migration.getMigration(url, name)', async (test) => {\n\n  let url = 'mongodb://localhost:27017'\n  let name = 'getMigration'\n\n  let migration = await Migration.getMigration(url, name)\n\n  test.is(migration.length, 3)\n  \n  test.is(migration[0].name, '20200820234900-create-collection-migration')\n  test.is(await migration[0].isInstalled(), false)\n  test.is(migration[1].name, '20200820234901-create-index-migration')\n  test.is(await migration[1].isInstalled(), false)\n  test.is(migration[2].name, '20200823213000-null')\n  test.is(await migration[2].isInstalled(), false)\n\n})\n\nTest('Migration.installMigration(url, name)', async (test) => {\n\n  let url = 'mongodb://localhost:27017'\n  let name = 'installMigration'\n\n  await Migration.installMigration(url, name)\n\n  try {\n\n    let migration = await Migration.getMigration(url, name)\n\n    test.is(migration.length, 3)\n  \n    test.is(await migration[0].isInstalled(), true)\n    test.is(await migration[1].isInstalled(), true)\n    test.is(await migration[2].isInstalled(), true)\n  \n  } finally {\n    await Migration.uninstallMigration(url, name)\n  }\n\n})\n\nTest('Migration.uninstallMigration(url, name)', async (test) => {\n\n  let url = 'mongodb://localhost:27017'\n  let name = 'uninstallMigration'\n\n  await Migration.installMigration(url, name)\n  await Migration.uninstallMigration(url, name)\n\n  let migration = await Migration.getMigration(url, name)\n\n  test.is(migration.length, 3)\n\n  test.is(await migration[0].isInstalled(), false)\n  test.is(await migration[1].isInstalled(), false)\n  test.is(await migration[2].isInstalled(), false)\n\n})\n\nTest('migrationIndex', async (test) => {\n\n  let url = 'mongodb://localhost:27017'\n  let name = 'migrationIndex'\n\n  await Migration.installMigration(url, name)\n\n  try {\n    \n    let database = new Database(url, name)\n\n    await database.open()\n\n    try {\n\n      let explanation = await database.explainIndexMigration('migrationIndex')\n      let winningPlan = explanation.queryPlanner.winningPlan\n\n      // test.log(winningPlan)\n      test.is(winningPlan.stage, 'FETCH')\n      test.is(winningPlan.inputStage.stage, 'IXSCAN')\n      test.is(winningPlan.inputStage.indexName, 'migrationIndex')\n\n    } finally {\n      await database.close()\n    }\n\n  } finally {\n    await Migration.uninstallMigration(url, name)\n  }\n\n})\n"],"file":"migration.test.js"}