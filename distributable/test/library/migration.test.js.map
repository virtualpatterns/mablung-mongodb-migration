{"version":3,"sources":["../../../source/test/library/migration.test.js"],"names":["Test","Migration","before","test","context","url","name","serial","migration","getMigration","is","length","isInstalled","installMigration","uninstallMigration"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { Migration } from './migration.js'\n\nTest.before(async (test) => {\n  test.context.url = 'mongodb://localhost:27017'\n  test.context.name = 'test-migration'\n})\n\nTest.serial('Migration.getMigration(url, name)', async (test) => {\n\n  let migration = await Migration.getMigration(test.context.url, test.context.name)\n\n  test.is(migration.length, 4)\n  \n  test.is(migration[0].name, '20200820234900-create-collection-migration')\n  test.is(await migration[0].isInstalled(), false)\n  test.is(migration[1].name, '20200820234901-create-index-migration-unique')\n  test.is(await migration[1].isInstalled(), false)\n  test.is(migration[2].name, '20200820234902-create-index-migration-find')\n  test.is(await migration[2].isInstalled(), false)\n  test.is(migration[3].name, '20200823213000-null')\n  test.is(await migration[3].isInstalled(), false)\n\n})\n\nTest.serial('Migration.installMigration(url, name)', async (test) => {\n\n  await Migration.installMigration(test.context.url, test.context.name)\n\n  let migration = await Migration.getMigration(test.context.url, test.context.name)\n\n  test.is(migration.length, 4)\n\n  test.is(await migration[0].isInstalled(), true)\n  test.is(await migration[1].isInstalled(), true)\n  test.is(await migration[2].isInstalled(), true)\n  test.is(await migration[3].isInstalled(), true)\n\n})\n\nTest.serial('Migration.uninstallMigration(url, name)', async (test) => {\n\n  await Migration.uninstallMigration(test.context.url, test.context.name)\n\n  let migration = await Migration.getMigration(test.context.url, test.context.name)\n\n  test.is(migration.length, 4)\n\n  test.is(await migration[0].isInstalled(), false)\n  test.is(await migration[1].isInstalled(), false)\n  test.is(await migration[2].isInstalled(), false)\n  test.is(await migration[3].isInstalled(), false)\n\n})\n"],"file":"migration.test.js"}